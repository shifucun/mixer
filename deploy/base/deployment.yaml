# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mixer-grpc
spec:
  replicas: 1
  strategy:
      type: RollingUpdate
      rollingUpdate:
        # maximum number of Pods that can be created over the desired number of Pods
        maxSurge: 1
        # maximum number of Pods that can be unavailable during the update process
        maxUnavailable: 25%
  selector:
      matchLabels:
        app: mixer-grpc
  template:
    metadata:
      labels:
        app: mixer-grpc
    spec:
      # This k8s service account binds to the GCP service account, and used
      # for GKE Workload Identity: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
      serviceAccountName: mixer-ksa
      containers:
        - name: mixer
          image: gcr.io/datcom-ci/datacommons-mixer:latest
          imagePullPolicy: Always
          resources:
            limits:
              memory: "2G"
              cpu: "500m"
          args:
            - --bq_dataset
            - "$(BIG_QUERY)"
            - --bt_table
            - "$(BIG_TABLE)"
            - --bt_project
            - "google.com:datcom-store-dev"
            - --bt_instance
            - "prophet-cache"
            - --project_id
            - $(PROJECT_ID)
          env:
          - name: PROJECT_ID
            valueFrom:
              configMapKeyRef:
                name: mixer-configmap
                key: projectId
          - name: BIG_QUERY
            valueFrom:
              configMapKeyRef:
                name: store-configmap
                key: bigquery.version
          - name: BIG_TABLE
            valueFrom:
              configMapKeyRef:
                name: store-configmap
                key: bigtable.version
          ports:
            - containerPort: 12345
          readinessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:12345"]
            periodSeconds: 5
          livenessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:12345"]
            periodSeconds: 5
            initialDelaySeconds: 10
        - name: esp
          image: gcr.io/endpoints-release/endpoints-runtime:1
          args:
            - --service
            - $(SERVICE_NAME)
            - --http_port
            - "8081"
            - --backend
            - "grpc://127.0.0.1:12345"
            - --cors_preset
            - "basic"
            - --rollout_strategy
            - "managed"
            - --healthz
            - "healthz"
          env:
          - name: SERVICE_NAME
            valueFrom:
              configMapKeyRef:
                name: mixer-configmap
                key: serviceName
          resources:
            limits:
              memory: "1G"
              cpu: "100m"
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8081
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            periodSeconds: 5
            initialDelaySeconds: 10
          ports:
            - containerPort: 8081
