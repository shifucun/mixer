// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mixer.proto

package datacommons

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A graph query request in Sparql query language.
type QueryRequest struct {
	// Sparql query string.
	Sparql               string   `protobuf:"bytes,1,opt,name=sparql,proto3" json:"sparql,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryRequest) Reset()         { *m = QueryRequest{} }
func (m *QueryRequest) String() string { return proto.CompactTextString(m) }
func (*QueryRequest) ProtoMessage()    {}
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{0}
}

func (m *QueryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRequest.Unmarshal(m, b)
}
func (m *QueryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRequest.Marshal(b, m, deterministic)
}
func (m *QueryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRequest.Merge(m, src)
}
func (m *QueryRequest) XXX_Size() int {
	return xxx_messageInfo_QueryRequest.Size(m)
}
func (m *QueryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRequest proto.InternalMessageInfo

func (m *QueryRequest) GetSparql() string {
	if m != nil {
		return m.Sparql
	}
	return ""
}

// Cell in the QueryResponse
type QueryResponseCell struct {
	// Cell value.
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// Provenance ID.
	ProvenanceId         string   `protobuf:"bytes,2,opt,name=provenance_id,json=provenanceId,proto3" json:"provenance_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryResponseCell) Reset()         { *m = QueryResponseCell{} }
func (m *QueryResponseCell) String() string { return proto.CompactTextString(m) }
func (*QueryResponseCell) ProtoMessage()    {}
func (*QueryResponseCell) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{1}
}

func (m *QueryResponseCell) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryResponseCell.Unmarshal(m, b)
}
func (m *QueryResponseCell) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryResponseCell.Marshal(b, m, deterministic)
}
func (m *QueryResponseCell) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryResponseCell.Merge(m, src)
}
func (m *QueryResponseCell) XXX_Size() int {
	return xxx_messageInfo_QueryResponseCell.Size(m)
}
func (m *QueryResponseCell) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryResponseCell.DiscardUnknown(m)
}

var xxx_messageInfo_QueryResponseCell proto.InternalMessageInfo

func (m *QueryResponseCell) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *QueryResponseCell) GetProvenanceId() string {
	if m != nil {
		return m.ProvenanceId
	}
	return ""
}

// A graph query response row corresponding to the query variables in graph query.
type QueryResponseRow struct {
	// A list of QueryResponseCell.
	Cells                []*QueryResponseCell `protobuf:"bytes,1,rep,name=cells,proto3" json:"cells,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *QueryResponseRow) Reset()         { *m = QueryResponseRow{} }
func (m *QueryResponseRow) String() string { return proto.CompactTextString(m) }
func (*QueryResponseRow) ProtoMessage()    {}
func (*QueryResponseRow) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{2}
}

func (m *QueryResponseRow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryResponseRow.Unmarshal(m, b)
}
func (m *QueryResponseRow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryResponseRow.Marshal(b, m, deterministic)
}
func (m *QueryResponseRow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryResponseRow.Merge(m, src)
}
func (m *QueryResponseRow) XXX_Size() int {
	return xxx_messageInfo_QueryResponseRow.Size(m)
}
func (m *QueryResponseRow) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryResponseRow.DiscardUnknown(m)
}

var xxx_messageInfo_QueryResponseRow proto.InternalMessageInfo

func (m *QueryResponseRow) GetCells() []*QueryResponseCell {
	if m != nil {
		return m.Cells
	}
	return nil
}

// Graph query response.
type QueryResponse struct {
	// Identifier for selected variable. Size of the header is the same as number
	// of cells for each row.
	Header []string `protobuf:"bytes,1,rep,name=header,proto3" json:"header,omitempty"`
	// Query results, with each row containing cells corresponding to header
	// variable order.
	Rows                 []*QueryResponseRow `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *QueryResponse) Reset()         { *m = QueryResponse{} }
func (m *QueryResponse) String() string { return proto.CompactTextString(m) }
func (*QueryResponse) ProtoMessage()    {}
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{3}
}

func (m *QueryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryResponse.Unmarshal(m, b)
}
func (m *QueryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryResponse.Marshal(b, m, deterministic)
}
func (m *QueryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryResponse.Merge(m, src)
}
func (m *QueryResponse) XXX_Size() int {
	return xxx_messageInfo_QueryResponse.Size(m)
}
func (m *QueryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryResponse proto.InternalMessageInfo

func (m *QueryResponse) GetHeader() []string {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *QueryResponse) GetRows() []*QueryResponseRow {
	if m != nil {
		return m.Rows
	}
	return nil
}

// Request to translate a graph query.
type TranslateRequest struct {
	// String representaion of schema mappings used to translate.
	SchemaMapping string `protobuf:"bytes,1,opt,name=schema_mapping,json=schemaMapping,proto3" json:"schema_mapping,omitempty"`
	// String representation of sparql query.
	Sparql               string   `protobuf:"bytes,2,opt,name=sparql,proto3" json:"sparql,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TranslateRequest) Reset()         { *m = TranslateRequest{} }
func (m *TranslateRequest) String() string { return proto.CompactTextString(m) }
func (*TranslateRequest) ProtoMessage()    {}
func (*TranslateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{4}
}

func (m *TranslateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TranslateRequest.Unmarshal(m, b)
}
func (m *TranslateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TranslateRequest.Marshal(b, m, deterministic)
}
func (m *TranslateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TranslateRequest.Merge(m, src)
}
func (m *TranslateRequest) XXX_Size() int {
	return xxx_messageInfo_TranslateRequest.Size(m)
}
func (m *TranslateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TranslateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TranslateRequest proto.InternalMessageInfo

func (m *TranslateRequest) GetSchemaMapping() string {
	if m != nil {
		return m.SchemaMapping
	}
	return ""
}

func (m *TranslateRequest) GetSparql() string {
	if m != nil {
		return m.Sparql
	}
	return ""
}

// Response of a translate request.
type TranslateResponse struct {
	// The translated sql.
	Sql string `protobuf:"bytes,1,opt,name=sql,proto3" json:"sql,omitempty"`
	// Serialized json string of the translation result
	Translation          string   `protobuf:"bytes,2,opt,name=translation,proto3" json:"translation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TranslateResponse) Reset()         { *m = TranslateResponse{} }
func (m *TranslateResponse) String() string { return proto.CompactTextString(m) }
func (*TranslateResponse) ProtoMessage()    {}
func (*TranslateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{5}
}

func (m *TranslateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TranslateResponse.Unmarshal(m, b)
}
func (m *TranslateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TranslateResponse.Marshal(b, m, deterministic)
}
func (m *TranslateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TranslateResponse.Merge(m, src)
}
func (m *TranslateResponse) XXX_Size() int {
	return xxx_messageInfo_TranslateResponse.Size(m)
}
func (m *TranslateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TranslateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TranslateResponse proto.InternalMessageInfo

func (m *TranslateResponse) GetSql() string {
	if m != nil {
		return m.Sql
	}
	return ""
}

func (m *TranslateResponse) GetTranslation() string {
	if m != nil {
		return m.Translation
	}
	return ""
}

// Request to get property labels.
type GetPropertyLabelsRequest struct {
	// The dcids of nodes.
	Dcids                []string `protobuf:"bytes,1,rep,name=dcids,proto3" json:"dcids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPropertyLabelsRequest) Reset()         { *m = GetPropertyLabelsRequest{} }
func (m *GetPropertyLabelsRequest) String() string { return proto.CompactTextString(m) }
func (*GetPropertyLabelsRequest) ProtoMessage()    {}
func (*GetPropertyLabelsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{6}
}

func (m *GetPropertyLabelsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPropertyLabelsRequest.Unmarshal(m, b)
}
func (m *GetPropertyLabelsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPropertyLabelsRequest.Marshal(b, m, deterministic)
}
func (m *GetPropertyLabelsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPropertyLabelsRequest.Merge(m, src)
}
func (m *GetPropertyLabelsRequest) XXX_Size() int {
	return xxx_messageInfo_GetPropertyLabelsRequest.Size(m)
}
func (m *GetPropertyLabelsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPropertyLabelsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPropertyLabelsRequest proto.InternalMessageInfo

func (m *GetPropertyLabelsRequest) GetDcids() []string {
	if m != nil {
		return m.Dcids
	}
	return nil
}

// Response returned by GetPropertyLabels.
type GetPropertyLabelsResponse struct {
	// The JSON payload.
	Payload              string   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPropertyLabelsResponse) Reset()         { *m = GetPropertyLabelsResponse{} }
func (m *GetPropertyLabelsResponse) String() string { return proto.CompactTextString(m) }
func (*GetPropertyLabelsResponse) ProtoMessage()    {}
func (*GetPropertyLabelsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{7}
}

func (m *GetPropertyLabelsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPropertyLabelsResponse.Unmarshal(m, b)
}
func (m *GetPropertyLabelsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPropertyLabelsResponse.Marshal(b, m, deterministic)
}
func (m *GetPropertyLabelsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPropertyLabelsResponse.Merge(m, src)
}
func (m *GetPropertyLabelsResponse) XXX_Size() int {
	return xxx_messageInfo_GetPropertyLabelsResponse.Size(m)
}
func (m *GetPropertyLabelsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPropertyLabelsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPropertyLabelsResponse proto.InternalMessageInfo

func (m *GetPropertyLabelsResponse) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

// Request to get all neighboring nodes along an edge labeled by a property.
type GetPropertyValuesRequest struct {
	// The dcids of nodes to query for.
	Dcids []string `protobuf:"bytes,1,rep,name=dcids,proto3" json:"dcids,omitempty"`
	// The type of the neighboring node to query for.
	ValueType string `protobuf:"bytes,2,opt,name=value_type,json=valueType,proto3" json:"value_type,omitempty"`
	// The property to get adjacent nodes for.
	Property string `protobuf:"bytes,3,opt,name=property,proto3" json:"property,omitempty"`
	// Maximum number of nodes to query for.
	Limit                int32    `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPropertyValuesRequest) Reset()         { *m = GetPropertyValuesRequest{} }
func (m *GetPropertyValuesRequest) String() string { return proto.CompactTextString(m) }
func (*GetPropertyValuesRequest) ProtoMessage()    {}
func (*GetPropertyValuesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{8}
}

func (m *GetPropertyValuesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPropertyValuesRequest.Unmarshal(m, b)
}
func (m *GetPropertyValuesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPropertyValuesRequest.Marshal(b, m, deterministic)
}
func (m *GetPropertyValuesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPropertyValuesRequest.Merge(m, src)
}
func (m *GetPropertyValuesRequest) XXX_Size() int {
	return xxx_messageInfo_GetPropertyValuesRequest.Size(m)
}
func (m *GetPropertyValuesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPropertyValuesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPropertyValuesRequest proto.InternalMessageInfo

func (m *GetPropertyValuesRequest) GetDcids() []string {
	if m != nil {
		return m.Dcids
	}
	return nil
}

func (m *GetPropertyValuesRequest) GetValueType() string {
	if m != nil {
		return m.ValueType
	}
	return ""
}

func (m *GetPropertyValuesRequest) GetProperty() string {
	if m != nil {
		return m.Property
	}
	return ""
}

func (m *GetPropertyValuesRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// Response returned by GetPropertyValues.
type GetPropertyValuesResponse struct {
	// The JSON payload.
	Payload              string   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPropertyValuesResponse) Reset()         { *m = GetPropertyValuesResponse{} }
func (m *GetPropertyValuesResponse) String() string { return proto.CompactTextString(m) }
func (*GetPropertyValuesResponse) ProtoMessage()    {}
func (*GetPropertyValuesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{9}
}

func (m *GetPropertyValuesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPropertyValuesResponse.Unmarshal(m, b)
}
func (m *GetPropertyValuesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPropertyValuesResponse.Marshal(b, m, deterministic)
}
func (m *GetPropertyValuesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPropertyValuesResponse.Merge(m, src)
}
func (m *GetPropertyValuesResponse) XXX_Size() int {
	return xxx_messageInfo_GetPropertyValuesResponse.Size(m)
}
func (m *GetPropertyValuesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPropertyValuesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPropertyValuesResponse proto.InternalMessageInfo

func (m *GetPropertyValuesResponse) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

// Request to get all triples linking to the given nodes.
type GetTriplesRequest struct {
	// The dcids of the nodes to query for.
	Dcids []string `protobuf:"bytes,1,rep,name=dcids,proto3" json:"dcids,omitempty"`
	// Maximum number of triples for each property and type of the neighbor.
	Limit                int32    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTriplesRequest) Reset()         { *m = GetTriplesRequest{} }
func (m *GetTriplesRequest) String() string { return proto.CompactTextString(m) }
func (*GetTriplesRequest) ProtoMessage()    {}
func (*GetTriplesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{10}
}

func (m *GetTriplesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTriplesRequest.Unmarshal(m, b)
}
func (m *GetTriplesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTriplesRequest.Marshal(b, m, deterministic)
}
func (m *GetTriplesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTriplesRequest.Merge(m, src)
}
func (m *GetTriplesRequest) XXX_Size() int {
	return xxx_messageInfo_GetTriplesRequest.Size(m)
}
func (m *GetTriplesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTriplesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTriplesRequest proto.InternalMessageInfo

func (m *GetTriplesRequest) GetDcids() []string {
	if m != nil {
		return m.Dcids
	}
	return nil
}

func (m *GetTriplesRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// Response returned by GetTriples.
type GetTriplesResponse struct {
	// The JSON payload.
	Payload              string   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTriplesResponse) Reset()         { *m = GetTriplesResponse{} }
func (m *GetTriplesResponse) String() string { return proto.CompactTextString(m) }
func (*GetTriplesResponse) ProtoMessage()    {}
func (*GetTriplesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{11}
}

func (m *GetTriplesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTriplesResponse.Unmarshal(m, b)
}
func (m *GetTriplesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTriplesResponse.Marshal(b, m, deterministic)
}
func (m *GetTriplesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTriplesResponse.Merge(m, src)
}
func (m *GetTriplesResponse) XXX_Size() int {
	return xxx_messageInfo_GetTriplesResponse.Size(m)
}
func (m *GetTriplesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTriplesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTriplesResponse proto.InternalMessageInfo

func (m *GetTriplesResponse) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

// Request to get all population/observation information for a place.
type GetPopObsRequest struct {
	// DCID of a place.
	Dcid                 string   `protobuf:"bytes,1,opt,name=dcid,proto3" json:"dcid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPopObsRequest) Reset()         { *m = GetPopObsRequest{} }
func (m *GetPopObsRequest) String() string { return proto.CompactTextString(m) }
func (*GetPopObsRequest) ProtoMessage()    {}
func (*GetPopObsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{12}
}

func (m *GetPopObsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPopObsRequest.Unmarshal(m, b)
}
func (m *GetPopObsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPopObsRequest.Marshal(b, m, deterministic)
}
func (m *GetPopObsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPopObsRequest.Merge(m, src)
}
func (m *GetPopObsRequest) XXX_Size() int {
	return xxx_messageInfo_GetPopObsRequest.Size(m)
}
func (m *GetPopObsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPopObsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPopObsRequest proto.InternalMessageInfo

func (m *GetPopObsRequest) GetDcid() string {
	if m != nil {
		return m.Dcid
	}
	return ""
}

// Response of GetPopObs.
type GetPopObsResponse struct {
	// The JSON payload.
	Payload              string   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPopObsResponse) Reset()         { *m = GetPopObsResponse{} }
func (m *GetPopObsResponse) String() string { return proto.CompactTextString(m) }
func (*GetPopObsResponse) ProtoMessage()    {}
func (*GetPopObsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{13}
}

func (m *GetPopObsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPopObsResponse.Unmarshal(m, b)
}
func (m *GetPopObsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPopObsResponse.Marshal(b, m, deterministic)
}
func (m *GetPopObsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPopObsResponse.Merge(m, src)
}
func (m *GetPopObsResponse) XXX_Size() int {
	return xxx_messageInfo_GetPopObsResponse.Size(m)
}
func (m *GetPopObsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPopObsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPopObsResponse proto.InternalMessageInfo

func (m *GetPopObsResponse) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

// Represents a property value pair.
type PropertyValue struct {
	// The property schema
	Property string `protobuf:"bytes,1,opt,name=property,proto3" json:"property,omitempty"`
	// The value in string.
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PropertyValue) Reset()         { *m = PropertyValue{} }
func (m *PropertyValue) String() string { return proto.CompactTextString(m) }
func (*PropertyValue) ProtoMessage()    {}
func (*PropertyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{14}
}

func (m *PropertyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PropertyValue.Unmarshal(m, b)
}
func (m *PropertyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PropertyValue.Marshal(b, m, deterministic)
}
func (m *PropertyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PropertyValue.Merge(m, src)
}
func (m *PropertyValue) XXX_Size() int {
	return xxx_messageInfo_PropertyValue.Size(m)
}
func (m *PropertyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_PropertyValue.DiscardUnknown(m)
}

var xxx_messageInfo_PropertyValue proto.InternalMessageInfo

func (m *PropertyValue) GetProperty() string {
	if m != nil {
		return m.Property
	}
	return ""
}

func (m *PropertyValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Requests to get observation for all place.
type GetPlaceObsRequest struct {
	// The type of the place.
	PlaceType string `protobuf:"bytes,1,opt,name=place_type,json=placeType,proto3" json:"place_type,omitempty"`
	// The type of the Statistical population.
	PopulationType string `protobuf:"bytes,2,opt,name=population_type,json=populationType,proto3" json:"population_type,omitempty"`
	// A list of constraining property values that defines the population.
	Pvs []*PropertyValue `protobuf:"bytes,3,rep,name=pvs,proto3" json:"pvs,omitempty"`
	// Observation date.
	ObservationDate      string   `protobuf:"bytes,4,opt,name=observation_date,json=observationDate,proto3" json:"observation_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPlaceObsRequest) Reset()         { *m = GetPlaceObsRequest{} }
func (m *GetPlaceObsRequest) String() string { return proto.CompactTextString(m) }
func (*GetPlaceObsRequest) ProtoMessage()    {}
func (*GetPlaceObsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{15}
}

func (m *GetPlaceObsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPlaceObsRequest.Unmarshal(m, b)
}
func (m *GetPlaceObsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPlaceObsRequest.Marshal(b, m, deterministic)
}
func (m *GetPlaceObsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPlaceObsRequest.Merge(m, src)
}
func (m *GetPlaceObsRequest) XXX_Size() int {
	return xxx_messageInfo_GetPlaceObsRequest.Size(m)
}
func (m *GetPlaceObsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPlaceObsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPlaceObsRequest proto.InternalMessageInfo

func (m *GetPlaceObsRequest) GetPlaceType() string {
	if m != nil {
		return m.PlaceType
	}
	return ""
}

func (m *GetPlaceObsRequest) GetPopulationType() string {
	if m != nil {
		return m.PopulationType
	}
	return ""
}

func (m *GetPlaceObsRequest) GetPvs() []*PropertyValue {
	if m != nil {
		return m.Pvs
	}
	return nil
}

func (m *GetPlaceObsRequest) GetObservationDate() string {
	if m != nil {
		return m.ObservationDate
	}
	return ""
}

// Response of GetPlaceObs.
type GetPlaceObsResponse struct {
	// The JSON payload.
	Payload              string   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPlaceObsResponse) Reset()         { *m = GetPlaceObsResponse{} }
func (m *GetPlaceObsResponse) String() string { return proto.CompactTextString(m) }
func (*GetPlaceObsResponse) ProtoMessage()    {}
func (*GetPlaceObsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{16}
}

func (m *GetPlaceObsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPlaceObsResponse.Unmarshal(m, b)
}
func (m *GetPlaceObsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPlaceObsResponse.Marshal(b, m, deterministic)
}
func (m *GetPlaceObsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPlaceObsResponse.Merge(m, src)
}
func (m *GetPlaceObsResponse) XXX_Size() int {
	return xxx_messageInfo_GetPlaceObsResponse.Size(m)
}
func (m *GetPlaceObsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPlaceObsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPlaceObsResponse proto.InternalMessageInfo

func (m *GetPlaceObsResponse) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

// Request to get certain population for a set of places.
type GetPopulationsRequest struct {
	// DCIDs for a list of places.
	Dcids []string `protobuf:"bytes,1,rep,name=dcids,proto3" json:"dcids,omitempty"`
	// Population type.
	PopulationType string `protobuf:"bytes,2,opt,name=population_type,json=populationType,proto3" json:"population_type,omitempty"`
	// A list of constraining property values that define the population.
	Pvs                  []*PropertyValue `protobuf:"bytes,3,rep,name=pvs,proto3" json:"pvs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetPopulationsRequest) Reset()         { *m = GetPopulationsRequest{} }
func (m *GetPopulationsRequest) String() string { return proto.CompactTextString(m) }
func (*GetPopulationsRequest) ProtoMessage()    {}
func (*GetPopulationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{17}
}

func (m *GetPopulationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPopulationsRequest.Unmarshal(m, b)
}
func (m *GetPopulationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPopulationsRequest.Marshal(b, m, deterministic)
}
func (m *GetPopulationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPopulationsRequest.Merge(m, src)
}
func (m *GetPopulationsRequest) XXX_Size() int {
	return xxx_messageInfo_GetPopulationsRequest.Size(m)
}
func (m *GetPopulationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPopulationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPopulationsRequest proto.InternalMessageInfo

func (m *GetPopulationsRequest) GetDcids() []string {
	if m != nil {
		return m.Dcids
	}
	return nil
}

func (m *GetPopulationsRequest) GetPopulationType() string {
	if m != nil {
		return m.PopulationType
	}
	return ""
}

func (m *GetPopulationsRequest) GetPvs() []*PropertyValue {
	if m != nil {
		return m.Pvs
	}
	return nil
}

// Response of GetPopulation.
type GetPopulationsResponse struct {
	// The JSON payload.
	Payload              string   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPopulationsResponse) Reset()         { *m = GetPopulationsResponse{} }
func (m *GetPopulationsResponse) String() string { return proto.CompactTextString(m) }
func (*GetPopulationsResponse) ProtoMessage()    {}
func (*GetPopulationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{18}
}

func (m *GetPopulationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPopulationsResponse.Unmarshal(m, b)
}
func (m *GetPopulationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPopulationsResponse.Marshal(b, m, deterministic)
}
func (m *GetPopulationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPopulationsResponse.Merge(m, src)
}
func (m *GetPopulationsResponse) XXX_Size() int {
	return xxx_messageInfo_GetPopulationsResponse.Size(m)
}
func (m *GetPopulationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPopulationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPopulationsResponse proto.InternalMessageInfo

func (m *GetPopulationsResponse) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

// Request to get observation given a list of population and observation properties.
type GetObservationsRequest struct {
	// Population for a list of populations.
	Dcids []string `protobuf:"bytes,1,rep,name=dcids,proto3" json:"dcids,omitempty"`
	// The measured property of the observation.
	MeasuredProperty string `protobuf:"bytes,2,opt,name=measured_property,json=measuredProperty,proto3" json:"measured_property,omitempty"`
	// The observation date.
	ObservationDate string `protobuf:"bytes,3,opt,name=observation_date,json=observationDate,proto3" json:"observation_date,omitempty"`
	// The statistics type, like "measured_value", "median_value", etc...
	StatsType string `protobuf:"bytes,4,opt,name=stats_type,json=statsType,proto3" json:"stats_type,omitempty"`
	// (Optional) Observation period like "P1Y", "P3M" etc...
	ObservationPeriod string `protobuf:"bytes,5,opt,name=observation_period,json=observationPeriod,proto3" json:"observation_period,omitempty"`
	// (Opitonal) Measurement method used to get the observation.
	MeasurementMethod    string   `protobuf:"bytes,6,opt,name=measurement_method,json=measurementMethod,proto3" json:"measurement_method,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetObservationsRequest) Reset()         { *m = GetObservationsRequest{} }
func (m *GetObservationsRequest) String() string { return proto.CompactTextString(m) }
func (*GetObservationsRequest) ProtoMessage()    {}
func (*GetObservationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{19}
}

func (m *GetObservationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetObservationsRequest.Unmarshal(m, b)
}
func (m *GetObservationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetObservationsRequest.Marshal(b, m, deterministic)
}
func (m *GetObservationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetObservationsRequest.Merge(m, src)
}
func (m *GetObservationsRequest) XXX_Size() int {
	return xxx_messageInfo_GetObservationsRequest.Size(m)
}
func (m *GetObservationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetObservationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetObservationsRequest proto.InternalMessageInfo

func (m *GetObservationsRequest) GetDcids() []string {
	if m != nil {
		return m.Dcids
	}
	return nil
}

func (m *GetObservationsRequest) GetMeasuredProperty() string {
	if m != nil {
		return m.MeasuredProperty
	}
	return ""
}

func (m *GetObservationsRequest) GetObservationDate() string {
	if m != nil {
		return m.ObservationDate
	}
	return ""
}

func (m *GetObservationsRequest) GetStatsType() string {
	if m != nil {
		return m.StatsType
	}
	return ""
}

func (m *GetObservationsRequest) GetObservationPeriod() string {
	if m != nil {
		return m.ObservationPeriod
	}
	return ""
}

func (m *GetObservationsRequest) GetMeasurementMethod() string {
	if m != nil {
		return m.MeasurementMethod
	}
	return ""
}

// Response of GetObservation request.
type GetObservationsResponse struct {
	// The JSON payload.
	Payload              string   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetObservationsResponse) Reset()         { *m = GetObservationsResponse{} }
func (m *GetObservationsResponse) String() string { return proto.CompactTextString(m) }
func (*GetObservationsResponse) ProtoMessage()    {}
func (*GetObservationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{20}
}

func (m *GetObservationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetObservationsResponse.Unmarshal(m, b)
}
func (m *GetObservationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetObservationsResponse.Marshal(b, m, deterministic)
}
func (m *GetObservationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetObservationsResponse.Merge(m, src)
}
func (m *GetObservationsResponse) XXX_Size() int {
	return xxx_messageInfo_GetObservationsResponse.Size(m)
}
func (m *GetObservationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetObservationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetObservationsResponse proto.InternalMessageInfo

func (m *GetObservationsResponse) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

// Request to get places that are contained in parent places.
type GetPlacesInRequest struct {
	// The parent place dcids.
	Dcids []string `protobuf:"bytes,1,rep,name=dcids,proto3" json:"dcids,omitempty"`
	// The child place type.
	PlaceType            string   `protobuf:"bytes,2,opt,name=place_type,json=placeType,proto3" json:"place_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPlacesInRequest) Reset()         { *m = GetPlacesInRequest{} }
func (m *GetPlacesInRequest) String() string { return proto.CompactTextString(m) }
func (*GetPlacesInRequest) ProtoMessage()    {}
func (*GetPlacesInRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{21}
}

func (m *GetPlacesInRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPlacesInRequest.Unmarshal(m, b)
}
func (m *GetPlacesInRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPlacesInRequest.Marshal(b, m, deterministic)
}
func (m *GetPlacesInRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPlacesInRequest.Merge(m, src)
}
func (m *GetPlacesInRequest) XXX_Size() int {
	return xxx_messageInfo_GetPlacesInRequest.Size(m)
}
func (m *GetPlacesInRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPlacesInRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPlacesInRequest proto.InternalMessageInfo

func (m *GetPlacesInRequest) GetDcids() []string {
	if m != nil {
		return m.Dcids
	}
	return nil
}

func (m *GetPlacesInRequest) GetPlaceType() string {
	if m != nil {
		return m.PlaceType
	}
	return ""
}

// Response of GetPlacesIn.
type GetPlacesInResponse struct {
	// The JSON payload.
	Payload              string   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPlacesInResponse) Reset()         { *m = GetPlacesInResponse{} }
func (m *GetPlacesInResponse) String() string { return proto.CompactTextString(m) }
func (*GetPlacesInResponse) ProtoMessage()    {}
func (*GetPlacesInResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26934ec017ec8df, []int{22}
}

func (m *GetPlacesInResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPlacesInResponse.Unmarshal(m, b)
}
func (m *GetPlacesInResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPlacesInResponse.Marshal(b, m, deterministic)
}
func (m *GetPlacesInResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPlacesInResponse.Merge(m, src)
}
func (m *GetPlacesInResponse) XXX_Size() int {
	return xxx_messageInfo_GetPlacesInResponse.Size(m)
}
func (m *GetPlacesInResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPlacesInResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPlacesInResponse proto.InternalMessageInfo

func (m *GetPlacesInResponse) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

func init() {
	proto.RegisterType((*QueryRequest)(nil), "datacommons.QueryRequest")
	proto.RegisterType((*QueryResponseCell)(nil), "datacommons.QueryResponseCell")
	proto.RegisterType((*QueryResponseRow)(nil), "datacommons.QueryResponseRow")
	proto.RegisterType((*QueryResponse)(nil), "datacommons.QueryResponse")
	proto.RegisterType((*TranslateRequest)(nil), "datacommons.TranslateRequest")
	proto.RegisterType((*TranslateResponse)(nil), "datacommons.TranslateResponse")
	proto.RegisterType((*GetPropertyLabelsRequest)(nil), "datacommons.GetPropertyLabelsRequest")
	proto.RegisterType((*GetPropertyLabelsResponse)(nil), "datacommons.GetPropertyLabelsResponse")
	proto.RegisterType((*GetPropertyValuesRequest)(nil), "datacommons.GetPropertyValuesRequest")
	proto.RegisterType((*GetPropertyValuesResponse)(nil), "datacommons.GetPropertyValuesResponse")
	proto.RegisterType((*GetTriplesRequest)(nil), "datacommons.GetTriplesRequest")
	proto.RegisterType((*GetTriplesResponse)(nil), "datacommons.GetTriplesResponse")
	proto.RegisterType((*GetPopObsRequest)(nil), "datacommons.GetPopObsRequest")
	proto.RegisterType((*GetPopObsResponse)(nil), "datacommons.GetPopObsResponse")
	proto.RegisterType((*PropertyValue)(nil), "datacommons.PropertyValue")
	proto.RegisterType((*GetPlaceObsRequest)(nil), "datacommons.GetPlaceObsRequest")
	proto.RegisterType((*GetPlaceObsResponse)(nil), "datacommons.GetPlaceObsResponse")
	proto.RegisterType((*GetPopulationsRequest)(nil), "datacommons.GetPopulationsRequest")
	proto.RegisterType((*GetPopulationsResponse)(nil), "datacommons.GetPopulationsResponse")
	proto.RegisterType((*GetObservationsRequest)(nil), "datacommons.GetObservationsRequest")
	proto.RegisterType((*GetObservationsResponse)(nil), "datacommons.GetObservationsResponse")
	proto.RegisterType((*GetPlacesInRequest)(nil), "datacommons.GetPlacesInRequest")
	proto.RegisterType((*GetPlacesInResponse)(nil), "datacommons.GetPlacesInResponse")
}

func init() { proto.RegisterFile("mixer.proto", fileDescriptor_b26934ec017ec8df) }

var fileDescriptor_b26934ec017ec8df = []byte{
	// 1070 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0xdd, 0x72, 0xdb, 0x44,
	0x14, 0x1e, 0xd9, 0x71, 0xa8, 0x8f, 0xeb, 0xc4, 0x5e, 0xf2, 0xa3, 0x6a, 0x9a, 0xe0, 0xd9, 0xd2,
	0x10, 0x0a, 0x89, 0x21, 0x85, 0x9b, 0xde, 0x30, 0x0c, 0xcc, 0x84, 0xcc, 0x90, 0x36, 0xf5, 0x04,
	0x2e, 0xb8, 0xc9, 0xac, 0xad, 0x9d, 0x44, 0x53, 0x59, 0xbb, 0xd1, 0xae, 0x13, 0x3c, 0x5c, 0x15,
	0xb8, 0xe0, 0x9e, 0x77, 0xe0, 0x0d, 0x78, 0x12, 0x5e, 0x81, 0x07, 0x61, 0x74, 0x76, 0x65, 0x4b,
	0xb2, 0x15, 0xcd, 0x94, 0xf6, 0xce, 0xbb, 0xe7, 0xe8, 0xfb, 0xbe, 0xf3, 0xed, 0xd1, 0x1e, 0x0b,
	0x5a, 0xe3, 0xe0, 0x67, 0x1e, 0x1f, 0xca, 0x58, 0x68, 0x41, 0x5a, 0x3e, 0xd3, 0x6c, 0x24, 0xc6,
	0x63, 0x11, 0x29, 0xef, 0xe1, 0xa5, 0x10, 0x97, 0x21, 0xef, 0x33, 0x19, 0xf4, 0x59, 0x14, 0x09,
	0xcd, 0x74, 0x20, 0x22, 0x65, 0x52, 0xe9, 0x1e, 0xdc, 0x7f, 0x39, 0xe1, 0xf1, 0x74, 0xc0, 0xaf,
	0x27, 0x5c, 0x69, 0xb2, 0x05, 0xab, 0x4a, 0xb2, 0xf8, 0x3a, 0x74, 0x9d, 0x9e, 0xb3, 0xdf, 0x1c,
	0xd8, 0x15, 0x7d, 0x0e, 0x5d, 0x9b, 0xa7, 0xa4, 0x88, 0x14, 0xff, 0x86, 0x87, 0x21, 0xd9, 0x80,
	0xc6, 0x0d, 0x0b, 0x27, 0xdc, 0xe6, 0x9a, 0x05, 0x79, 0x04, 0x6d, 0x19, 0x8b, 0x1b, 0x1e, 0xb1,
	0x68, 0xc4, 0x2f, 0x02, 0xdf, 0xad, 0x61, 0xf4, 0xfe, 0x7c, 0xf3, 0xc4, 0xa7, 0xdf, 0x41, 0x27,
	0x87, 0x37, 0x10, 0xb7, 0xe4, 0x0b, 0x68, 0x8c, 0x78, 0x18, 0x2a, 0xd7, 0xe9, 0xd5, 0xf7, 0x5b,
	0x47, 0xbb, 0x87, 0x99, 0x32, 0x0e, 0x17, 0xd8, 0x07, 0x26, 0x99, 0xfe, 0x04, 0xed, 0x5c, 0x2c,
	0x29, 0xe1, 0x8a, 0x33, 0x9f, 0xc7, 0x88, 0xd3, 0x1c, 0xd8, 0x15, 0xf9, 0x1c, 0x56, 0x62, 0x71,
	0xab, 0xdc, 0x1a, 0xa2, 0xef, 0x94, 0xa3, 0x0f, 0xc4, 0xed, 0x00, 0x53, 0xe9, 0x4b, 0xe8, 0x9c,
	0xc7, 0x2c, 0x52, 0x21, 0xd3, 0x3c, 0x75, 0xe8, 0x31, 0xac, 0xa9, 0xd1, 0x15, 0x1f, 0xb3, 0x8b,
	0x31, 0x93, 0x32, 0x88, 0x2e, 0x6d, 0xf5, 0x6d, 0xb3, 0x7b, 0x6a, 0x36, 0x33, 0x46, 0xd6, 0x72,
	0x46, 0x1e, 0x43, 0x37, 0x03, 0x69, 0x25, 0x77, 0xa0, 0xae, 0x66, 0x96, 0x27, 0x3f, 0x49, 0x0f,
	0x5a, 0xda, 0xa6, 0x05, 0x22, 0xb2, 0x18, 0xd9, 0x2d, 0xfa, 0x19, 0xb8, 0xc7, 0x5c, 0x9f, 0xc5,
	0x42, 0xf2, 0x58, 0x4f, 0xbf, 0x67, 0x43, 0x1e, 0xaa, 0x54, 0xe3, 0x06, 0x34, 0xfc, 0x51, 0xe0,
	0x2b, 0xeb, 0x80, 0x59, 0xd0, 0x2f, 0xe1, 0xc1, 0x92, 0x27, 0xac, 0x04, 0x17, 0xde, 0x93, 0x6c,
	0x1a, 0x0a, 0xe6, 0x5b, 0x19, 0xe9, 0x92, 0xbe, 0x76, 0x72, 0x4c, 0x3f, 0x26, 0x87, 0x7c, 0x37,
	0x13, 0xd9, 0x01, 0xc0, 0x5e, 0xb8, 0xd0, 0x53, 0xc9, 0xad, 0xf8, 0x26, 0xee, 0x9c, 0x4f, 0x25,
	0x27, 0x1e, 0xdc, 0x93, 0x16, 0xcd, 0xad, 0x63, 0x70, 0xb6, 0x4e, 0x00, 0xc3, 0x60, 0x1c, 0x68,
	0x77, 0xa5, 0xe7, 0xec, 0x37, 0x06, 0x66, 0x51, 0x90, 0x9e, 0x4a, 0xa8, 0x94, 0xfe, 0x15, 0x74,
	0x8f, 0xb9, 0x3e, 0x8f, 0x03, 0x19, 0x56, 0x49, 0x9e, 0xf1, 0xd6, 0xb2, 0xbc, 0x87, 0x40, 0xb2,
	0x00, 0x95, 0x84, 0x7b, 0xd0, 0x49, 0x74, 0x0a, 0xf9, 0x62, 0x38, 0xe3, 0x23, 0xb0, 0x92, 0x50,
	0xd8, 0x54, 0xfc, 0x4d, 0x0f, 0x50, 0x58, 0x9a, 0x57, 0x09, 0xfb, 0x35, 0xb4, 0x73, 0xb5, 0xe7,
	0x1c, 0x74, 0x16, 0x1d, 0x34, 0x6f, 0x65, 0x2d, 0xf3, 0x56, 0xd2, 0xbf, 0x1d, 0x2c, 0xe5, 0x2c,
	0x64, 0x23, 0x9e, 0x11, 0xb7, 0x03, 0x20, 0x93, 0x2d, 0x73, 0x52, 0x06, 0xaa, 0x89, 0x3b, 0x78,
	0x52, 0x1f, 0xc1, 0xba, 0x14, 0x72, 0x62, 0x5a, 0x2e, 0x7b, 0x9a, 0x6b, 0xf3, 0x6d, 0x4c, 0xfc,
	0x14, 0xea, 0xf2, 0x46, 0xb9, 0x75, 0x7c, 0xb7, 0xbc, 0xdc, 0xbb, 0x95, 0x53, 0x3e, 0x48, 0xd2,
	0xc8, 0xc7, 0xd0, 0x11, 0x43, 0xc5, 0xe3, 0x1b, 0x83, 0xeb, 0x33, 0xcd, 0xf1, 0xbc, 0x9b, 0x83,
	0xf5, 0xcc, 0xfe, 0xb7, 0x4c, 0x73, 0xda, 0x87, 0xf7, 0x73, 0xb2, 0x2b, 0xbd, 0xfa, 0xdd, 0x81,
	0x4d, 0xe3, 0xad, 0xd5, 0x57, 0x71, 0xf0, 0xef, 0xa6, 0x44, 0x7a, 0x04, 0x5b, 0x45, 0x15, 0x95,
	0xd2, 0x7f, 0xab, 0xe1, 0x43, 0x2f, 0xe6, 0x16, 0x54, 0x68, 0xff, 0x04, 0xba, 0x63, 0xce, 0xd4,
	0x24, 0xe6, 0xfe, 0xc5, 0xac, 0x1f, 0x8c, 0xfa, 0x4e, 0x1a, 0x48, 0xb5, 0x2d, 0x35, 0xbd, 0xbe,
	0xd4, 0xf4, 0xa4, 0x2b, 0x94, 0x66, 0x5a, 0x19, 0x3b, 0xcc, 0xc9, 0x34, 0x71, 0x07, 0x9d, 0x38,
	0x00, 0x92, 0x45, 0x92, 0x3c, 0x0e, 0x84, 0xef, 0x36, 0x30, 0xad, 0x9b, 0x89, 0x9c, 0x61, 0x20,
	0x49, 0xb7, 0x62, 0xc6, 0x3c, 0xd2, 0x17, 0x63, 0xae, 0xaf, 0x84, 0xef, 0xae, 0x9a, 0xf4, 0x4c,
	0xe4, 0x14, 0x03, 0xf4, 0x29, 0x6c, 0x2f, 0x98, 0x50, 0x69, 0xdd, 0xc9, 0xbc, 0xbb, 0xd5, 0x49,
	0x54, 0x79, 0x3b, 0x65, 0x7a, 0xbe, 0x56, 0xe8, 0xf9, 0x6c, 0xc7, 0x21, 0x54, 0x15, 0xf7, 0xd1,
	0x5f, 0x6d, 0x68, 0x9c, 0x26, 0xe3, 0x97, 0x3c, 0x87, 0x06, 0x4e, 0x12, 0xf2, 0x60, 0xd9, 0x74,
	0x41, 0x4d, 0x9e, 0x57, 0x3e, 0x78, 0xe8, 0xda, 0xaf, 0xff, 0xfc, 0xfb, 0x67, 0xed, 0x1e, 0x59,
	0xed, 0x5f, 0x23, 0xcc, 0x0f, 0xd0, 0xc4, 0x84, 0x33, 0xa1, 0xf4, 0x9b, 0x62, 0x76, 0x11, 0xb3,
	0x45, 0x2d, 0xe6, 0x33, 0xe7, 0x09, 0x79, 0xed, 0x98, 0xeb, 0x27, 0x37, 0x09, 0xc8, 0xe3, 0x1c,
	0x48, 0xd9, 0x6c, 0xf1, 0xf6, 0xaa, 0xd2, 0x2c, 0xef, 0x0e, 0xf2, 0x6e, 0x93, 0xcd, 0x7e, 0x24,
	0x7c, 0xde, 0x4f, 0xdb, 0xf3, 0x20, 0x34, 0x6c, 0x7f, 0xd8, 0xd7, 0x34, 0xf7, 0x30, 0xd6, 0xf9,
	0x96, 0x75, 0xf4, 0x50, 0x87, 0x47, 0x97, 0xeb, 0x58, 0x62, 0x87, 0x99, 0x2e, 0xe5, 0x32, 0x72,
	0x03, 0xb0, 0x5c, 0x46, 0x7e, 0x48, 0x95, 0xda, 0x71, 0x63, 0xd8, 0x0a, 0x76, 0x98, 0x87, 0xef,
	0xb6, 0xe3, 0xcd, 0x74, 0x94, 0xd9, 0x61, 0x74, 0x24, 0x76, 0xf8, 0x00, 0xf3, 0x99, 0x47, 0x76,
	0x8b, 0xb8, 0xf9, 0x69, 0xea, 0x7d, 0x50, 0x1a, 0xb7, 0x84, 0x9b, 0x48, 0xb8, 0x4e, 0xda, 0x86,
	0x50, 0x5b, 0xdc, 0x57, 0xb0, 0x36, 0x4f, 0xc6, 0x42, 0xff, 0x37, 0x93, 0x8b, 0x4c, 0x84, 0xe6,
	0x99, 0x92, 0x92, 0x6e, 0x91, 0x2c, 0x73, 0x19, 0x13, 0xba, 0x60, 0xd7, 0xc2, 0xbc, 0xf0, 0x1e,
	0xdd, 0x99, 0x63, 0x49, 0x1f, 0x22, 0xe9, 0x16, 0xed, 0x5a, 0x3f, 0xe7, 0x29, 0x09, 0xf1, 0x2f,
	0xb0, 0x5e, 0xb8, 0xcb, 0xc8, 0x02, 0xea, 0x92, 0xeb, 0xde, 0xfb, 0xf0, 0xee, 0xa4, 0x7c, 0x4f,
	0x51, 0x62, 0xb8, 0x33, 0x37, 0x2f, 0x92, 0x07, 0xd0, 0xca, 0x5c, 0x64, 0x64, 0xc1, 0xbf, 0xc2,
	0x6d, 0xe9, 0xf5, 0xca, 0x13, 0x2c, 0xe1, 0x36, 0x12, 0x76, 0xc9, 0xba, 0x2d, 0x16, 0xe3, 0x07,
	0x41, 0x44, 0x24, 0xd6, 0x99, 0xe6, 0xe3, 0x71, 0xbe, 0x05, 0x3a, 0x0f, 0xe9, 0x36, 0x68, 0x91,
	0x2e, 0x29, 0x8e, 0x41, 0x73, 0xf6, 0x0f, 0x8a, 0xec, 0x2c, 0x39, 0xa9, 0xf9, 0x9f, 0x1c, 0x6f,
	0xb7, 0x2c, 0xbc, 0xd0, 0xa2, 0xc3, 0x49, 0xf8, 0x2a, 0x39, 0xc3, 0x03, 0x31, 0x54, 0x24, 0x9c,
	0xfb, 0x97, 0x90, 0x2c, 0x2f, 0x28, 0x43, 0xd3, 0x2b, 0x4f, 0x58, 0x28, 0xc8, 0x10, 0x25, 0xf1,
	0x84, 0xca, 0x16, 0x34, 0xfb, 0x30, 0x28, 0x14, 0x54, 0xfc, 0x06, 0x29, 0x14, 0xb4, 0xf0, 0x3d,
	0x91, 0x16, 0x44, 0xa1, 0x9f, 0x7e, 0x31, 0xf0, 0x67, 0xce, 0x93, 0xe1, 0x2a, 0x7e, 0xf3, 0x3d,
	0xfd, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x81, 0x84, 0x43, 0x17, 0x2d, 0x0e, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MixerClient is the client API for Mixer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MixerClient interface {
	// Query DataCommons Graph with Sparql.
	Query(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error)
	// Query DataCommons Graph with Sparql.
	QueryPost(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error)
	// Fetch property labels adjacent of nodes
	GetPropertyLabels(ctx context.Context, in *GetPropertyLabelsRequest, opts ...grpc.CallOption) (*GetPropertyLabelsResponse, error)
	// Fetch property labels adjacent of nodes
	GetPropertyLabelsPost(ctx context.Context, in *GetPropertyLabelsRequest, opts ...grpc.CallOption) (*GetPropertyLabelsResponse, error)
	// Fetch nodes that linked to source nodes with a given property.
	GetPropertyValues(ctx context.Context, in *GetPropertyValuesRequest, opts ...grpc.CallOption) (*GetPropertyValuesResponse, error)
	// Fetch nodes that linked to source nodes with a given property.
	GetPropertyValuesPost(ctx context.Context, in *GetPropertyValuesRequest, opts ...grpc.CallOption) (*GetPropertyValuesResponse, error)
	// Fetch triples that have the given nodes as subject or object.
	GetTriples(ctx context.Context, in *GetTriplesRequest, opts ...grpc.CallOption) (*GetTriplesResponse, error)
	// Fetch triples that have the given nodes as subject or object.
	GetTriplesPost(ctx context.Context, in *GetTriplesRequest, opts ...grpc.CallOption) (*GetTriplesResponse, error)
	// Get populations for a list of places, given the population type and constraining property values.
	GetPopulations(ctx context.Context, in *GetPopulationsRequest, opts ...grpc.CallOption) (*GetPopulationsResponse, error)
	// Get observations for a list of population, given the observation constraints.
	GetObservations(ctx context.Context, in *GetObservationsRequest, opts ...grpc.CallOption) (*GetObservationsResponse, error)
	// Get places contained in parent places.
	GetPlacesIn(ctx context.Context, in *GetPlacesInRequest, opts ...grpc.CallOption) (*GetPlacesInResponse, error)
	// Get places contained in parent places.
	GetPlacesInPost(ctx context.Context, in *GetPlacesInRequest, opts ...grpc.CallOption) (*GetPlacesInResponse, error)
	// Get population and observation data for a place.
	GetPopObs(ctx context.Context, in *GetPopObsRequest, opts ...grpc.CallOption) (*GetPopObsResponse, error)
	// Get observation data for a list of places, given place type, population type, and
	// population constraining properties.
	GetPlaceObs(ctx context.Context, in *GetPlaceObsRequest, opts ...grpc.CallOption) (*GetPlaceObsResponse, error)
	// Translate Sparql Query into translation results.
	Translate(ctx context.Context, in *TranslateRequest, opts ...grpc.CallOption) (*TranslateResponse, error)
}

type mixerClient struct {
	cc *grpc.ClientConn
}

func NewMixerClient(cc *grpc.ClientConn) MixerClient {
	return &mixerClient{cc}
}

func (c *mixerClient) Query(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error) {
	out := new(QueryResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/Query", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) QueryPost(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error) {
	out := new(QueryResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/QueryPost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) GetPropertyLabels(ctx context.Context, in *GetPropertyLabelsRequest, opts ...grpc.CallOption) (*GetPropertyLabelsResponse, error) {
	out := new(GetPropertyLabelsResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/GetPropertyLabels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) GetPropertyLabelsPost(ctx context.Context, in *GetPropertyLabelsRequest, opts ...grpc.CallOption) (*GetPropertyLabelsResponse, error) {
	out := new(GetPropertyLabelsResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/GetPropertyLabelsPost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) GetPropertyValues(ctx context.Context, in *GetPropertyValuesRequest, opts ...grpc.CallOption) (*GetPropertyValuesResponse, error) {
	out := new(GetPropertyValuesResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/GetPropertyValues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) GetPropertyValuesPost(ctx context.Context, in *GetPropertyValuesRequest, opts ...grpc.CallOption) (*GetPropertyValuesResponse, error) {
	out := new(GetPropertyValuesResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/GetPropertyValuesPost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) GetTriples(ctx context.Context, in *GetTriplesRequest, opts ...grpc.CallOption) (*GetTriplesResponse, error) {
	out := new(GetTriplesResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/GetTriples", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) GetTriplesPost(ctx context.Context, in *GetTriplesRequest, opts ...grpc.CallOption) (*GetTriplesResponse, error) {
	out := new(GetTriplesResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/GetTriplesPost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) GetPopulations(ctx context.Context, in *GetPopulationsRequest, opts ...grpc.CallOption) (*GetPopulationsResponse, error) {
	out := new(GetPopulationsResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/GetPopulations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) GetObservations(ctx context.Context, in *GetObservationsRequest, opts ...grpc.CallOption) (*GetObservationsResponse, error) {
	out := new(GetObservationsResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/GetObservations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) GetPlacesIn(ctx context.Context, in *GetPlacesInRequest, opts ...grpc.CallOption) (*GetPlacesInResponse, error) {
	out := new(GetPlacesInResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/GetPlacesIn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) GetPlacesInPost(ctx context.Context, in *GetPlacesInRequest, opts ...grpc.CallOption) (*GetPlacesInResponse, error) {
	out := new(GetPlacesInResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/GetPlacesInPost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) GetPopObs(ctx context.Context, in *GetPopObsRequest, opts ...grpc.CallOption) (*GetPopObsResponse, error) {
	out := new(GetPopObsResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/GetPopObs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) GetPlaceObs(ctx context.Context, in *GetPlaceObsRequest, opts ...grpc.CallOption) (*GetPlaceObsResponse, error) {
	out := new(GetPlaceObsResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/GetPlaceObs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) Translate(ctx context.Context, in *TranslateRequest, opts ...grpc.CallOption) (*TranslateResponse, error) {
	out := new(TranslateResponse)
	err := c.cc.Invoke(ctx, "/datacommons.Mixer/Translate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MixerServer is the server API for Mixer service.
type MixerServer interface {
	// Query DataCommons Graph with Sparql.
	Query(context.Context, *QueryRequest) (*QueryResponse, error)
	// Query DataCommons Graph with Sparql.
	QueryPost(context.Context, *QueryRequest) (*QueryResponse, error)
	// Fetch property labels adjacent of nodes
	GetPropertyLabels(context.Context, *GetPropertyLabelsRequest) (*GetPropertyLabelsResponse, error)
	// Fetch property labels adjacent of nodes
	GetPropertyLabelsPost(context.Context, *GetPropertyLabelsRequest) (*GetPropertyLabelsResponse, error)
	// Fetch nodes that linked to source nodes with a given property.
	GetPropertyValues(context.Context, *GetPropertyValuesRequest) (*GetPropertyValuesResponse, error)
	// Fetch nodes that linked to source nodes with a given property.
	GetPropertyValuesPost(context.Context, *GetPropertyValuesRequest) (*GetPropertyValuesResponse, error)
	// Fetch triples that have the given nodes as subject or object.
	GetTriples(context.Context, *GetTriplesRequest) (*GetTriplesResponse, error)
	// Fetch triples that have the given nodes as subject or object.
	GetTriplesPost(context.Context, *GetTriplesRequest) (*GetTriplesResponse, error)
	// Get populations for a list of places, given the population type and constraining property values.
	GetPopulations(context.Context, *GetPopulationsRequest) (*GetPopulationsResponse, error)
	// Get observations for a list of population, given the observation constraints.
	GetObservations(context.Context, *GetObservationsRequest) (*GetObservationsResponse, error)
	// Get places contained in parent places.
	GetPlacesIn(context.Context, *GetPlacesInRequest) (*GetPlacesInResponse, error)
	// Get places contained in parent places.
	GetPlacesInPost(context.Context, *GetPlacesInRequest) (*GetPlacesInResponse, error)
	// Get population and observation data for a place.
	GetPopObs(context.Context, *GetPopObsRequest) (*GetPopObsResponse, error)
	// Get observation data for a list of places, given place type, population type, and
	// population constraining properties.
	GetPlaceObs(context.Context, *GetPlaceObsRequest) (*GetPlaceObsResponse, error)
	// Translate Sparql Query into translation results.
	Translate(context.Context, *TranslateRequest) (*TranslateResponse, error)
}

// UnimplementedMixerServer can be embedded to have forward compatible implementations.
type UnimplementedMixerServer struct {
}

func (*UnimplementedMixerServer) Query(ctx context.Context, req *QueryRequest) (*QueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Query not implemented")
}
func (*UnimplementedMixerServer) QueryPost(ctx context.Context, req *QueryRequest) (*QueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryPost not implemented")
}
func (*UnimplementedMixerServer) GetPropertyLabels(ctx context.Context, req *GetPropertyLabelsRequest) (*GetPropertyLabelsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPropertyLabels not implemented")
}
func (*UnimplementedMixerServer) GetPropertyLabelsPost(ctx context.Context, req *GetPropertyLabelsRequest) (*GetPropertyLabelsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPropertyLabelsPost not implemented")
}
func (*UnimplementedMixerServer) GetPropertyValues(ctx context.Context, req *GetPropertyValuesRequest) (*GetPropertyValuesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPropertyValues not implemented")
}
func (*UnimplementedMixerServer) GetPropertyValuesPost(ctx context.Context, req *GetPropertyValuesRequest) (*GetPropertyValuesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPropertyValuesPost not implemented")
}
func (*UnimplementedMixerServer) GetTriples(ctx context.Context, req *GetTriplesRequest) (*GetTriplesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTriples not implemented")
}
func (*UnimplementedMixerServer) GetTriplesPost(ctx context.Context, req *GetTriplesRequest) (*GetTriplesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTriplesPost not implemented")
}
func (*UnimplementedMixerServer) GetPopulations(ctx context.Context, req *GetPopulationsRequest) (*GetPopulationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPopulations not implemented")
}
func (*UnimplementedMixerServer) GetObservations(ctx context.Context, req *GetObservationsRequest) (*GetObservationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetObservations not implemented")
}
func (*UnimplementedMixerServer) GetPlacesIn(ctx context.Context, req *GetPlacesInRequest) (*GetPlacesInResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPlacesIn not implemented")
}
func (*UnimplementedMixerServer) GetPlacesInPost(ctx context.Context, req *GetPlacesInRequest) (*GetPlacesInResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPlacesInPost not implemented")
}
func (*UnimplementedMixerServer) GetPopObs(ctx context.Context, req *GetPopObsRequest) (*GetPopObsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPopObs not implemented")
}
func (*UnimplementedMixerServer) GetPlaceObs(ctx context.Context, req *GetPlaceObsRequest) (*GetPlaceObsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPlaceObs not implemented")
}
func (*UnimplementedMixerServer) Translate(ctx context.Context, req *TranslateRequest) (*TranslateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Translate not implemented")
}

func RegisterMixerServer(s *grpc.Server, srv MixerServer) {
	s.RegisterService(&_Mixer_serviceDesc, srv)
}

func _Mixer_Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).Query(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_QueryPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).QueryPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/QueryPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).QueryPost(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_GetPropertyLabels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPropertyLabelsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).GetPropertyLabels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/GetPropertyLabels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).GetPropertyLabels(ctx, req.(*GetPropertyLabelsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_GetPropertyLabelsPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPropertyLabelsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).GetPropertyLabelsPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/GetPropertyLabelsPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).GetPropertyLabelsPost(ctx, req.(*GetPropertyLabelsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_GetPropertyValues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPropertyValuesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).GetPropertyValues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/GetPropertyValues",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).GetPropertyValues(ctx, req.(*GetPropertyValuesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_GetPropertyValuesPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPropertyValuesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).GetPropertyValuesPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/GetPropertyValuesPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).GetPropertyValuesPost(ctx, req.(*GetPropertyValuesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_GetTriples_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTriplesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).GetTriples(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/GetTriples",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).GetTriples(ctx, req.(*GetTriplesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_GetTriplesPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTriplesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).GetTriplesPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/GetTriplesPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).GetTriplesPost(ctx, req.(*GetTriplesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_GetPopulations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPopulationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).GetPopulations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/GetPopulations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).GetPopulations(ctx, req.(*GetPopulationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_GetObservations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetObservationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).GetObservations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/GetObservations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).GetObservations(ctx, req.(*GetObservationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_GetPlacesIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPlacesInRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).GetPlacesIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/GetPlacesIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).GetPlacesIn(ctx, req.(*GetPlacesInRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_GetPlacesInPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPlacesInRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).GetPlacesInPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/GetPlacesInPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).GetPlacesInPost(ctx, req.(*GetPlacesInRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_GetPopObs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPopObsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).GetPopObs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/GetPopObs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).GetPopObs(ctx, req.(*GetPopObsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_GetPlaceObs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPlaceObsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).GetPlaceObs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/GetPlaceObs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).GetPlaceObs(ctx, req.(*GetPlaceObsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_Translate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TranslateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).Translate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacommons.Mixer/Translate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).Translate(ctx, req.(*TranslateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Mixer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "datacommons.Mixer",
	HandlerType: (*MixerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Query",
			Handler:    _Mixer_Query_Handler,
		},
		{
			MethodName: "QueryPost",
			Handler:    _Mixer_QueryPost_Handler,
		},
		{
			MethodName: "GetPropertyLabels",
			Handler:    _Mixer_GetPropertyLabels_Handler,
		},
		{
			MethodName: "GetPropertyLabelsPost",
			Handler:    _Mixer_GetPropertyLabelsPost_Handler,
		},
		{
			MethodName: "GetPropertyValues",
			Handler:    _Mixer_GetPropertyValues_Handler,
		},
		{
			MethodName: "GetPropertyValuesPost",
			Handler:    _Mixer_GetPropertyValuesPost_Handler,
		},
		{
			MethodName: "GetTriples",
			Handler:    _Mixer_GetTriples_Handler,
		},
		{
			MethodName: "GetTriplesPost",
			Handler:    _Mixer_GetTriplesPost_Handler,
		},
		{
			MethodName: "GetPopulations",
			Handler:    _Mixer_GetPopulations_Handler,
		},
		{
			MethodName: "GetObservations",
			Handler:    _Mixer_GetObservations_Handler,
		},
		{
			MethodName: "GetPlacesIn",
			Handler:    _Mixer_GetPlacesIn_Handler,
		},
		{
			MethodName: "GetPlacesInPost",
			Handler:    _Mixer_GetPlacesInPost_Handler,
		},
		{
			MethodName: "GetPopObs",
			Handler:    _Mixer_GetPopObs_Handler,
		},
		{
			MethodName: "GetPlaceObs",
			Handler:    _Mixer_GetPlaceObs_Handler,
		},
		{
			MethodName: "Translate",
			Handler:    _Mixer_Translate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mixer.proto",
}
